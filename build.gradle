plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id("org.sonarqube") version "5.1.0.4882"
}

group = 'com.streaming.app'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0' // swagger
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-core:6.2.4'

	// database migration - flyway
	implementation 'org.flywaydb:flyway-core:10.18.2'
	runtimeOnly 'org.flywaydb:flyway-database-postgresql:10.18.2'
}


task unitTest(type: Test) {
	useJUnitPlatform {
		includeTags 'unit'
	}
}

task integrationTest(type: Test) {
	useJUnitPlatform {
		includeTags 'integration'
	}
}

jacoco {
	toolVersion = "0.8.12"

}

jacocoTestReport {
//	dependsOn test, integrationTest
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}

	afterEvaluate {
		classDirectories.setFrom(files(
				fileTree(dir: "$buildDir/classes/java/main").include("**/*.class"),
				fileTree(dir: "$buildDir/classes/java/integrationTest").include("**/*.class")
		))
		executionData.setFrom(files(
				fileTree(dir: "$buildDir").include("jacoco/test.exec"),
				fileTree(dir: "$buildDir").include("jacoco/integrationTest.exec")
		))
	}
}